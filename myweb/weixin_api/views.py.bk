#coding=utf-8
from django.shortcuts import render

# Create your views here.

from django.http import HttpResponse
import  hashlib
from django.views.decorators.csrf import csrf_exempt
from django.utils.encoding import smart_str   #我们在需要将用户提交的数据转换为 Unicode 的时候，可以使用 smart_unicode，而在需要将程序中字符输出到非 Unicode 环境（比如 HTTP 协议数据）时可以使用 smart_str 方法。拿 DDlog 来说，也有不少地方用到了这两个方法
from lxml import etree
import  json
import  time


@csrf_exempt
def index(request):
    if request.method == "GET":
        signature = request.GET.get("signature", None)
        timestamp = request.GET.get("timestamp", None)
        nonce = request.GET.get("nonce", None)
        echostr = request.GET.get("echostr", None)
        token = "weiping"
        list_wx = [token, timestamp, nonce]
        list_wx.sort()
        hashcode = "%s%s%s" % tuple(list_wx)
        hashcode = hashlib.sha1(hashcode).hexdigest()
        if hashcode == signature:
           return HttpResponse(echostr)
        else:
           return HttpResponse("Hello, world. You're at the weixin_api index.")
    else:       #request.method == "POST"
        xml_str = smart_str(request.body)   #xml字符串
        print  xml_str
        '''<xml>
<URL><![CDATA[http://115.159.57.95/wx/]]></URL>
<ToUserName><![CDATA[api测试华通]]></ToUserName>
<FromUserName><![CDATA[风雪]]></FromUserName>
<CreateTime>1460541339</CreateTime>
<MsgType><![CDATA[text]]></MsgType>
<Content><![CDATA[hello]]></Content>
<MsgId>1</MsgId>
</xml> '''
        request_xml = etree.fromstring(xml_str)     #转化成xml
        wx_url=request_xml[0].text
        print  wx_url
       # haha=request_xml[0].text
        toUser = request_xml[1].text
        fromUser = request_xml[2].text
        CreateTime = request_xml[3].text
        MsgType = request_xml[4].text
        content = request_xml[5].text
   #     MsgId = request_xml[6].text
    #    print  toUser,fromUser,content,MsgId,CreateTime,MsgType
        print  '*'*10
        time_wx=int(time.time())       #打时间戳
      #  request_xml[3].text=int(time.time())       #打时间戳
     #   request_xml[1].text = fromUser       #发送和回复互换
     #   request_xml[2].text = toUser
     #   request_xml[5].text = 'test'
     #   haha='hehe' '''
     #   haha=''' 
    #    <xml>
   #     <ToUserName><![CDATA[%s]></ToUserName>
   #     <FromUserName><![CDATA[%s]]></FromUserName>
   #     <CreateTime>%d</CreateTime>
   #     <MsgType><![CDATA[text]]></MsgType>
   #     <Content><![CDATA['陈宫']]></Content>
   #     </xml>
  #      '''  % (smart_str(fromUser),smart_str(toUser),time_wx)
       # print haha
        return HttpResponse('haha')


def detail(request, question_id):
    return HttpResponse("You're looking at question %s." % question_id)
